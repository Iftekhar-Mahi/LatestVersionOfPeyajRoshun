{"ast":null,"code":"\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import \"./SearchProducts.css\"; // Import the CSS file\n\n// const SearchProducts = () => {\n//   const [searchByWhat, setSearchByWhat] = useState(\"\");\n//   const [searchProduct, setSearchProduct] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetchAllProducts(); // Fetch all products when the component mounts\n//   }, []); // Empty dependency array to fetch all products only once when the component mounts\n\n//   useEffect(() => {\n//     if (searchByWhat !== \"\" || searchProduct !== \"\") {\n//       fetchProducts(); // Fetch products whenever search criteria change\n//     }\n//   }, [searchByWhat, searchProduct]); // Trigger fetchProducts whenever searchByWhat or searchProduct changes\n\n//   const fetchAllProducts = async () => {\n//     try {\n//       const baseUrl = \"http://localhost:3006/api/allproducts\";\n//       const response = await fetch(baseUrl);\n\n//       if (!response.ok) {\n//         console.log(\"Response not ok\");\n//         throw new Error(\"Network response was not ok\");\n//       }\n\n//       const data = await response.json();\n//       console.log(data);\n//       setProducts(data);\n//     } catch (error) {\n//       console.error(\"Error fetching all products:\", error);\n//     }\n//   };\n\n//   const fetchProducts = async () => {\n//     try {\n//       const baseUrl = \"http://localhost:3006/api/products\";\n//       let searchQuery = \"\";\n\n//       if (searchByWhat === \"name\") {\n//         searchQuery = `ByName/?name=${searchProduct}`;\n//       } else if (searchByWhat === \"price\") {\n//         searchQuery = `ByPrice/?price=${searchProduct}`;\n//       } else if (searchByWhat === \"rating\") {\n//         searchQuery = `ByRating/?rating=${searchProduct}`;\n//       }\n\n//       const response = await fetch(baseUrl + searchQuery);\n\n//       if (!response.ok) {\n//         console.log(\"Response not ok\");\n//         throw new Error(\"Network response was not ok\");\n//       }\n\n//       const data = await response.json();\n//       console.log(data);\n//       setProducts(data);\n//     } catch (error) {\n//       console.error(\"Error fetching products by search:\", error);\n//     }\n//   };\n\n//   const handleSearchByWhatChange = (e) => {\n//     setSearchByWhat(e.target.value);\n//     setSearchProduct(\"\"); // Reset searchProduct when searchByWhat changes\n//   };\n\n//   const handleSearchProductChange = (e) => {\n//     setSearchProduct(e.target.value);\n//   };\n\n//   return (\n//     <div className=\"search-products-container\">\n//       <select\n//         value={searchByWhat}\n//         onChange={handleSearchByWhatChange}\n//         className=\"search-products-select\"\n//       >\n//         <option value=\"\">Select How to Search</option>\n//         <option value=\"name\">Name</option>\n//         <option value=\"price\">Price</option>\n//         <option value=\"rating\">Rating</option>\n//       </select>\n\n//       {searchByWhat && (\n//         <input\n//           type=\"text\"\n//           value={searchProduct}\n//           onChange={handleSearchProductChange}\n//           placeholder={`Search by ${searchByWhat}`}\n//           className=\"search-products-input\"\n//         />\n//       )}\n\n//       {products.length > 0 && (\n//         <ul className=\"search-products-list\">\n//           {products.map((product) => (\n//             <li key={product.id} className=\"search-products-item\">\n//               <span className=\"search-products-name\">{product.name}</span>\n//               <br />\n//               <Link to={`/productDetails/${product.productid}`}>\n//                 <button className=\"search-products-view-button\">\n//                   View Details\n//                 </button>\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SearchProducts;","map":{"version":3,"names":[],"sources":["E:/Latest/2_1-Term-Project/client/app/src/routes/SearchProducts.jsx"],"sourcesContent":["\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import \"./SearchProducts.css\"; // Import the CSS file\r\n\r\n// const SearchProducts = () => {\r\n//   const [searchByWhat, setSearchByWhat] = useState(\"\");\r\n//   const [searchProduct, setSearchProduct] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchAllProducts(); // Fetch all products when the component mounts\r\n//   }, []); // Empty dependency array to fetch all products only once when the component mounts\r\n\r\n//   useEffect(() => {\r\n//     if (searchByWhat !== \"\" || searchProduct !== \"\") {\r\n//       fetchProducts(); // Fetch products whenever search criteria change\r\n//     }\r\n//   }, [searchByWhat, searchProduct]); // Trigger fetchProducts whenever searchByWhat or searchProduct changes\r\n\r\n//   const fetchAllProducts = async () => {\r\n//     try {\r\n//       const baseUrl = \"http://localhost:3006/api/allproducts\";\r\n//       const response = await fetch(baseUrl);\r\n\r\n//       if (!response.ok) {\r\n//         console.log(\"Response not ok\");\r\n//         throw new Error(\"Network response was not ok\");\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       console.log(data);\r\n//       setProducts(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching all products:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchProducts = async () => {\r\n//     try {\r\n//       const baseUrl = \"http://localhost:3006/api/products\";\r\n//       let searchQuery = \"\";\r\n\r\n//       if (searchByWhat === \"name\") {\r\n//         searchQuery = `ByName/?name=${searchProduct}`;\r\n//       } else if (searchByWhat === \"price\") {\r\n//         searchQuery = `ByPrice/?price=${searchProduct}`;\r\n//       } else if (searchByWhat === \"rating\") {\r\n//         searchQuery = `ByRating/?rating=${searchProduct}`;\r\n//       }\r\n\r\n//       const response = await fetch(baseUrl + searchQuery);\r\n\r\n//       if (!response.ok) {\r\n//         console.log(\"Response not ok\");\r\n//         throw new Error(\"Network response was not ok\");\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       console.log(data);\r\n//       setProducts(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching products by search:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSearchByWhatChange = (e) => {\r\n//     setSearchByWhat(e.target.value);\r\n//     setSearchProduct(\"\"); // Reset searchProduct when searchByWhat changes\r\n//   };\r\n\r\n//   const handleSearchProductChange = (e) => {\r\n//     setSearchProduct(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"search-products-container\">\r\n//       <select\r\n//         value={searchByWhat}\r\n//         onChange={handleSearchByWhatChange}\r\n//         className=\"search-products-select\"\r\n//       >\r\n//         <option value=\"\">Select How to Search</option>\r\n//         <option value=\"name\">Name</option>\r\n//         <option value=\"price\">Price</option>\r\n//         <option value=\"rating\">Rating</option>\r\n//       </select>\r\n\r\n//       {searchByWhat && (\r\n//         <input\r\n//           type=\"text\"\r\n//           value={searchProduct}\r\n//           onChange={handleSearchProductChange}\r\n//           placeholder={`Search by ${searchByWhat}`}\r\n//           className=\"search-products-input\"\r\n//         />\r\n//       )}\r\n\r\n//       {products.length > 0 && (\r\n//         <ul className=\"search-products-list\">\r\n//           {products.map((product) => (\r\n//             <li key={product.id} className=\"search-products-item\">\r\n//               <span className=\"search-products-name\">{product.name}</span>\r\n//               <br />\r\n//               <Link to={`/productDetails/${product.productid}`}>\r\n//                 <button className=\"search-products-view-button\">\r\n//                   View Details\r\n//                 </button>\r\n//               </Link>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SearchProducts;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}