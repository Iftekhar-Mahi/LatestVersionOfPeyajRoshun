{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n//   Navigate,\n// } from \"react-router-dom\";\n\n// import UserInformation from \"./routes/userInfo\";\n// import ProductDetails from \"./routes/ProductDetails\";   \n// import PeyajRoshun from \"./routes/PeyajRoshun\";\n// import ProductCategoryWise from \"./routes/ProductCategoryWise\";\n// import UserDetailsPage from \"./routes/UserDetailsPage\";\n// import LoginPage from \"./routes/LoginPage\";\n// import SignUpPage from \"./routes/SignUp\";\n// import SearchProducts from \"./routes/SearchProducts\";\n// import Cart from \"./routes/Cart\";\n// import Home from \"./routes/HomePage\";\n\n// const App = () => {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [userId, setUserId] = useState(\"\"); // to store the user id\n\n//   const setAuth = (boolean) => {\n//     setIsAuthenticated(boolean);\n//   };\n\n//   const isAuth = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:3006/auth/is-verify\", {\n//         method: \"GET\",\n//         headers: { token: localStorage.token },\n//       });\n\n//       const parseRes = await response.json();\n//       parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n//     } catch (err) {\n//       console.error(err.message);\n//     }\n//   };\n\n//   useEffect(() => {\n//     isAuth();\n//   });\n\n//   return (\n//     <div>\n//     <Router>\n//         <Routes>\n//             <Route exact path=\"/\" element={<PeyajRoshun/>} />\n//             {/* //if user is authenticated then redirect to home page else redirect to login page */}\n//             <Route exact path=\"/login\" element={!isAuthenticated ? <LoginPage setAuth={setAuth}/> : <Navigate to=\"/home\" />} />\n//             {/* if user is authentiacated then rediredt to signup page else redirect to login page */}\n//             <Route exact path=\"/signup\" element={!isAuthenticated ? <SignUpPage setAuth={setAuth} /> : <Navigate to=\"/login\" />} />\n//             <Route exact path=\"/home\" element={isAuthenticated ? <Home/> : <Navigate to=\"/login\" />} />\n//             <Route exact path=\"/productscategorywise/:categoryid\" element={isAuthenticated ? <ProductCategoryWise/> : <Navigate to=\"/home\" />} />\n//             <Route exact path=\"/cart\" element={isAuthenticated ? <Cart/> : <Navigate to=\"/login\" />} />\n//             <Route exact path=\"/userProfile\" element={isAuthenticated ? <UserInformation setAuth={setAuth}/> : <Navigate to=\"/login\" />} />\n//             <Route exact path=\"/productDetails/:id\" element={isAuthenticated ? <ProductDetails/> : <Navigate to=\"/login\" />} />\n//             <Route exact path=\"/searchProducts\" element={isAuthenticated ? <SearchProducts/> : <Navigate to=\"/login\" />} />\n//         </Routes>\n//     </Router>\n//    </div>\n//   );\n\n// }\n// export default App;\n\n//prev version","map":{"version":3,"names":[],"sources":["E:/Latest/2_1-Term-Project/client/app/src/App.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Route,\r\n//   Routes,\r\n//   Navigate,\r\n// } from \"react-router-dom\";\r\n\r\n// import UserInformation from \"./routes/userInfo\";\r\n// import ProductDetails from \"./routes/ProductDetails\";   \r\n// import PeyajRoshun from \"./routes/PeyajRoshun\";\r\n// import ProductCategoryWise from \"./routes/ProductCategoryWise\";\r\n// import UserDetailsPage from \"./routes/UserDetailsPage\";\r\n// import LoginPage from \"./routes/LoginPage\";\r\n// import SignUpPage from \"./routes/SignUp\";\r\n// import SearchProducts from \"./routes/SearchProducts\";\r\n// import Cart from \"./routes/Cart\";\r\n// import Home from \"./routes/HomePage\";\r\n\r\n// const App = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [userId, setUserId] = useState(\"\"); // to store the user id\r\n\r\n//   const setAuth = (boolean) => {\r\n//     setIsAuthenticated(boolean);\r\n//   };\r\n\r\n//   const isAuth = async () => {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:3006/auth/is-verify\", {\r\n//         method: \"GET\",\r\n//         headers: { token: localStorage.token },\r\n//       });\r\n\r\n//       const parseRes = await response.json();\r\n//       parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\r\n//     } catch (err) {\r\n//       console.error(err.message);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     isAuth();\r\n//   });\r\n\r\n//   return (\r\n//     <div>\r\n//     <Router>\r\n//         <Routes>\r\n//             <Route exact path=\"/\" element={<PeyajRoshun/>} />\r\n//             {/* //if user is authenticated then redirect to home page else redirect to login page */}\r\n//             <Route exact path=\"/login\" element={!isAuthenticated ? <LoginPage setAuth={setAuth}/> : <Navigate to=\"/home\" />} />\r\n//             {/* if user is authentiacated then rediredt to signup page else redirect to login page */}\r\n//             <Route exact path=\"/signup\" element={!isAuthenticated ? <SignUpPage setAuth={setAuth} /> : <Navigate to=\"/login\" />} />\r\n//             <Route exact path=\"/home\" element={isAuthenticated ? <Home/> : <Navigate to=\"/login\" />} />\r\n//             <Route exact path=\"/productscategorywise/:categoryid\" element={isAuthenticated ? <ProductCategoryWise/> : <Navigate to=\"/home\" />} />\r\n//             <Route exact path=\"/cart\" element={isAuthenticated ? <Cart/> : <Navigate to=\"/login\" />} />\r\n//             <Route exact path=\"/userProfile\" element={isAuthenticated ? <UserInformation setAuth={setAuth}/> : <Navigate to=\"/login\" />} />\r\n//             <Route exact path=\"/productDetails/:id\" element={isAuthenticated ? <ProductDetails/> : <Navigate to=\"/login\" />} />\r\n//             <Route exact path=\"/searchProducts\" element={isAuthenticated ? <SearchProducts/> : <Navigate to=\"/login\" />} />\r\n//         </Routes>\r\n//     </Router>\r\n//    </div>\r\n//   );\r\n\r\n// }\r\n// export default App;\r\n\r\n//prev version"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}